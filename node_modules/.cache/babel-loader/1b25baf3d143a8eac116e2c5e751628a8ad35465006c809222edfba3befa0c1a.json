{"ast":null,"code":"var _jsxFileName = \"/Users/paawankarwa/Desktop/projects/realtime-editor/src/pages/EditorPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport toast from 'react-hot-toast';\nimport ACTIONS from '../Actions';\nimport Client from '../components/Client';\nimport Editor from '../components/Editor';\nimport { initSocket } from '../socket';\nimport { useLocation, useNavigate, Navigate, useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst roomId = 0;\nconst EditorPage = () => {\n  _s();\n  const socketRef = useRef(null);\n  const codeRef = useRef(null);\n  const location = useLocation();\n  const {\n    roomId\n  } = useParams();\n  const reactNavigator = useNavigate();\n  const [clients, setClients] = useState([]);\n  var called = 0;\n  useEffect(() => {\n    if (called >= 1) {\n      return;\n    }\n    called += 1;\n    const init = async () => {\n      var _location$state;\n      socketRef.current = await initSocket();\n      socketRef.current.on('connect_error', err => handleErrors(err));\n      socketRef.current.on('connect_failed', err => handleErrors(err));\n      function handleErrors(e) {\n        console.log('socket error', e);\n        toast.error('Socket connection failed, try again later.');\n        reactNavigator('/');\n      }\n      socketRef.current.emit(ACTIONS.JOIN, {\n        roomId,\n        username: (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.username\n      });\n\n      // Listening for joined event\n      socketRef.current.on(ACTIONS.JOINED, ({\n        clients,\n        username,\n        socketId\n      }) => {\n        var _location$state2;\n        if (username !== ((_location$state2 = location.state) === null || _location$state2 === void 0 ? void 0 : _location$state2.username)) {\n          toast.success(`${username} joined the room.`);\n          console.log(`${username} joined`);\n        }\n        setClients(clients);\n        socketRef.current.emit(ACTIONS.SYNC_CODE, {\n          code: codeRef.current,\n          socketId\n        });\n      });\n\n      // Listening for disconnected\n      socketRef.current.on(ACTIONS.DISCONNECTED, ({\n        socketId,\n        username\n      }) => {\n        toast.success(`${username} left the room.`);\n        setClients(prev => {\n          return prev.filter(client => client.socketId !== socketId);\n        });\n      });\n    };\n    init();\n    return () => {\n      if (socketRef.current != null) {\n        socketRef.current.off(ACTIONS.JOINED);\n        socketRef.current.off(ACTIONS.DISCONNECTED);\n        socketRef.current.disconnect();\n      }\n    };\n  }, []);\n  async function copyRoomId() {\n    try {\n      console.log(roomId);\n      await navigator.clipboard.writeText(roomId);\n      toast.success('Room ID has been copied to your clipboard');\n    } catch (err) {\n      toast.error('Could not copy the Room ID');\n      console.error(err);\n    }\n  }\n  function leaveRoom() {\n    reactNavigator('/');\n  }\n  if (!location.state) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mainWrap\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"aside\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"asideInner\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"logo\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"logoImage\",\n            src: \"/code-sync.png\",\n            alt: \"logo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Connected\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"clientsList\",\n          children: clients.map(client => /*#__PURE__*/_jsxDEV(Client, {\n            username: client.username\n          }, client.socketId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn copyBtn\",\n        onClick: copyRoomId,\n        children: \"Copy ROOM ID\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn leaveBtn\",\n        onClick: leaveRoom,\n        children: \"Leave\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"editorWrap\",\n      children: /*#__PURE__*/_jsxDEV(Editor, {\n        socketRef: socketRef,\n        roomId: roomId,\n        onCodeChange: code => {\n          codeRef.current = code;\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 9\n  }, this);\n};\n_s(EditorPage, \"O5aMOdwt2wCnuqVQk7SgEgKtMHE=\", false, function () {\n  return [useLocation, useParams, useNavigate];\n});\n_c = EditorPage;\nexport default EditorPage;\nvar _c;\n$RefreshReg$(_c, \"EditorPage\");","map":{"version":3,"names":["React","useState","useRef","useEffect","toast","ACTIONS","Client","Editor","initSocket","useLocation","useNavigate","Navigate","useParams","jsxDEV","_jsxDEV","roomId","EditorPage","_s","socketRef","codeRef","location","reactNavigator","clients","setClients","called","init","_location$state","current","on","err","handleErrors","e","console","log","error","emit","JOIN","username","state","JOINED","socketId","_location$state2","success","SYNC_CODE","code","DISCONNECTED","prev","filter","client","off","disconnect","copyRoomId","navigator","clipboard","writeText","leaveRoom","to","fileName","_jsxFileName","lineNumber","columnNumber","className","children","src","alt","map","onClick","onCodeChange","_c","$RefreshReg$"],"sources":["/Users/paawankarwa/Desktop/projects/realtime-editor/src/pages/EditorPage.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport toast from 'react-hot-toast';\nimport ACTIONS from '../Actions';\nimport Client from '../components/Client';\nimport Editor from '../components/Editor';\nimport { initSocket } from '../socket';\nimport {\n    useLocation,\n    useNavigate,\n    Navigate,\n    useParams,\n} from 'react-router-dom';\nconst roomId = 0;\nconst EditorPage = () => {\n    const socketRef = useRef(null);\n    const codeRef = useRef(null);\n    const location = useLocation();\n    const { roomId } = useParams();\n    const reactNavigator = useNavigate();\n    const [clients, setClients] = useState([]);\n    var called = 0;\n    useEffect(() => {\n        if(called>=1){\n            return;\n        }\n        called += 1;\n        const init = async () => {\n            socketRef.current = await initSocket();\n            socketRef.current.on('connect_error', (err) => handleErrors(err));\n            socketRef.current.on('connect_failed', (err) => handleErrors(err));\n\n            function handleErrors(e) {\n                console.log('socket error', e);\n                toast.error('Socket connection failed, try again later.');\n                reactNavigator('/');\n            }\n\n            socketRef.current.emit(ACTIONS.JOIN, {\n                roomId,\n                username: location.state?.username,\n            });\n            \n            // Listening for joined event\n            socketRef.current.on(\n                ACTIONS.JOINED,\n                ({ clients, username, socketId }) => {\n                    if (username !== location.state?.username) {\n                        toast.success(`${username} joined the room.`);\n                        console.log(`${username} joined`);\n                    }\n                    setClients(clients);\n                    socketRef.current.emit(ACTIONS.SYNC_CODE, {\n                        code: codeRef.current,\n                        socketId,\n                    });\n                }\n            );\n\n            // Listening for disconnected\n            socketRef.current.on(\n                ACTIONS.DISCONNECTED,\n                ({ socketId, username }) => {\n                    toast.success(`${username} left the room.`);\n                    setClients((prev) => {\n                        return prev.filter(\n                            (client) => client.socketId !== socketId\n                        );\n                    });\n                }\n            );\n        };\n        init();\n        return () => {\n            if(socketRef.current != null){\n                socketRef.current.off(ACTIONS.JOINED);\n                socketRef.current.off(ACTIONS.DISCONNECTED);\n                socketRef.current.disconnect();\n            \n            }\n            \n        };\n    }, []);\n\n    async function copyRoomId() {\n        try {\n            console.log(roomId);\n            await navigator.clipboard.writeText(roomId);\n            toast.success('Room ID has been copied to your clipboard');\n        } catch (err) {\n            toast.error('Could not copy the Room ID');\n            console.error(err);\n        }\n    }\n\n    function leaveRoom() {\n        reactNavigator('/');\n    }\n\n    if (!location.state) {\n        return <Navigate to=\"/\" />;\n    }\n\n    return (\n        <div className=\"mainWrap\">\n            <div className=\"aside\">\n                <div className=\"asideInner\">\n                    <div className=\"logo\">\n                        <img\n                            className=\"logoImage\"\n                            src=\"/code-sync.png\"\n                            alt=\"logo\"\n                        />\n                    </div>\n                    <h3>Connected</h3>\n                    <div className=\"clientsList\">\n                        {clients.map((client) => (\n                            <Client\n                                key={client.socketId}\n                                username={client.username}\n                            />\n                        ))}\n                    </div>\n                </div>\n                <button className=\"btn copyBtn\" onClick={copyRoomId}>\n                    Copy ROOM ID\n                </button>\n                <button className=\"btn leaveBtn\" onClick={leaveRoom}>\n                    Leave\n                </button>\n            </div>\n            <div className=\"editorWrap\">\n                <Editor\n                    socketRef={socketRef}\n                    roomId={roomId}\n                    onCodeChange={(code) => {\n                        codeRef.current = code;\n                    }}\n                />\n            </div>\n        </div>\n    );\n};\n\nexport default EditorPage;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}