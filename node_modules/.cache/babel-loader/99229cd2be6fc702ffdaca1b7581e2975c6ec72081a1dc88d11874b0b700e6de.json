{"ast":null,"code":"var _jsxFileName = \"/Users/paawankarwa/Desktop/projects/realtime-editor/src/pages/EditorPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport Client from '../components/Client.js';\nimport Editor from '../components/Editor.js';\nimport { initsocket } from '../socket.js';\nimport ACTIONS from '../Actions.js';\nimport { useLocation, useNavigate, Navigate, useParams } from 'react-router-dom';\nimport toast from 'react-hot-toast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditorPage = () => {\n  _s();\n  const socketRef = useRef(null);\n  const codeRef = useRef(null);\n  const location = useLocation();\n  const reactNavigator = useNavigate();\n  const {\n    roomId\n  } = useParams();\n  const [clients, setClients] = useState([]);\n  var called = 0;\n  useEffect(() => {\n    if (called == 1) {\n      return;\n    }\n    called += 1;\n    const init = async () => {\n      var _location$state;\n      socketRef.current = await initsocket();\n      socketRef.current.on('connect_error', err => handleErrors(err));\n      socketRef.current.on('connect_failed', err => handleErrors(err));\n      function handleErrors(err) {\n        console.log('socket error', err);\n        toast.error('Connection Failed! Try again later');\n        reactNavigator('/');\n      }\n      socketRef.current.emit(ACTIONS.JOIN, {\n        roomId,\n        username: (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.username\n      });\n\n      // Listening for joined event\n      socketRef.current.on(ACTIONS.JOINED, ({\n        clients,\n        username,\n        socketId\n      }) => {\n        var _location$state2;\n        if (username !== ((_location$state2 = location.state) === null || _location$state2 === void 0 ? void 0 : _location$state2.username)) {\n          toast.success(`${username} joined the room.`);\n          console.log(`${username} joined`);\n        }\n        setClients(clients);\n        socketRef.current.emit(ACTIONS.SYNC_CODE, {\n          code: codeRef.current,\n          socketId\n        });\n      });\n\n      //Listening for disconnected\n      socketRef.current.on(ACTIONS.DISCONNECTED, ({\n        socketId,\n        username\n      }) => {\n        toast.success(`${username} left the room!`);\n        setClients(prev => {\n          return prev.filter(client => client.socketId != socketId);\n        });\n      });\n    };\n    init();\n\n    // return ()=> {\n    //     socketRef.current.disconnect();\n    //     socketRef.current.off(ACTIONS.JOINED);\n    //     socketRef.current.off(ACTIONS.DISCONNECTED);\n\n    // }\n  }, []);\n  if (!location.state) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mainWrap\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"aside\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"asideInner\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"logo\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"logoImage\",\n            src: \"/code-sync.png\",\n            alt: \"logo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Connected Users\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"clientsList\",\n          children: clients.map(client => /*#__PURE__*/_jsxDEV(Client, {\n            username: client.username\n          }, client.socketId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 48\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn copyBtn\",\n        children: \"Copy room id\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn leaveBtn\",\n        children: \"leave\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"editorWrap\",\n      children: /*#__PURE__*/_jsxDEV(Editor, {\n        socketRef: socketRef,\n        roomId: roomId,\n        onCodeChange: code => {\n          codeRef.current = code;\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n_s(EditorPage, \"zz9ahTgVinh09SU5XbaoNqM0nwc=\", false, function () {\n  return [useLocation, useNavigate, useParams];\n});\n_c = EditorPage;\nexport default EditorPage;\nvar _c;\n$RefreshReg$(_c, \"EditorPage\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Client","Editor","initsocket","ACTIONS","useLocation","useNavigate","Navigate","useParams","toast","jsxDEV","_jsxDEV","EditorPage","_s","socketRef","codeRef","location","reactNavigator","roomId","clients","setClients","called","init","_location$state","current","on","err","handleErrors","console","log","error","emit","JOIN","username","state","JOINED","socketId","_location$state2","success","SYNC_CODE","code","DISCONNECTED","prev","filter","client","to","fileName","_jsxFileName","lineNumber","columnNumber","className","children","src","alt","map","onCodeChange","_c","$RefreshReg$"],"sources":["/Users/paawankarwa/Desktop/projects/realtime-editor/src/pages/EditorPage.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react'\nimport Client from '../components/Client.js'\nimport Editor from '../components/Editor.js';\nimport { initsocket } from '../socket.js';\nimport ACTIONS from '../Actions.js';\nimport { useLocation,useNavigate,Navigate,useParams } from 'react-router-dom';\nimport toast from 'react-hot-toast';\n\n\nconst EditorPage = () => {\n    const socketRef = useRef(null);\n    const codeRef = useRef(null);\n    const location = useLocation();\n    const reactNavigator = useNavigate();\n    const {roomId} = useParams();\n    const [clients,setClients] = useState([]);\n    \n\n    var called = 0;\n    useEffect(()=> {\n        if(called==1){\n            return;\n        }\n        called +=1;\n        const init =  async ()=>{\n            socketRef.current = await initsocket();\n            socketRef.current.on('connect_error',(err)=> handleErrors(err));\n            socketRef.current.on('connect_failed',(err)=> handleErrors(err));\n\n            function handleErrors(err){\n                console.log('socket error',err);\n                toast.error('Connection Failed! Try again later');\n                reactNavigator('/');\n            }\n            socketRef.current.emit(ACTIONS.JOIN, {\n                roomId,\n                username: location.state?.username,\n            });\n\n            // Listening for joined event\n            socketRef.current.on(\n                ACTIONS.JOINED,\n                ({ clients, username, socketId }) => {\n                    if (username !== location.state?.username) {\n                        toast.success(`${username} joined the room.`);\n                        console.log(`${username} joined`);\n                    }\n                    setClients(clients);\n                    socketRef.current.emit(ACTIONS.SYNC_CODE, {\n                        code: codeRef.current,\n                        socketId,\n                    });\n                }\n            );\n\n\n            //Listening for disconnected\n            socketRef.current.on(ACTIONS.DISCONNECTED,({socketId, username})=>{\n                toast.success(`${username} left the room!`);\n                setClients((prev)=> { \n                    return prev.filter(\n                        (client)=> client.socketId != socketId\n                    )\n                })\n            });\n        }\n        init();\n\n        // return ()=> {\n        //     socketRef.current.disconnect();\n        //     socketRef.current.off(ACTIONS.JOINED);\n        //     socketRef.current.off(ACTIONS.DISCONNECTED);\n            \n        // }\n    },[]);\n    if(!location.state){\n        return <Navigate to=\"/\"/>\n    }\n    \n\n    return (\n    <div className='mainWrap'>\n        <div className='aside'>\n            <div className='asideInner'>\n                <div className='logo'>\n                    <img className ='logoImage' src='/code-sync.png' alt='logo'></img>\n                </div>\n                <h3>\n                    Connected Users\n                </h3>\n                <div className='clientsList'>\n                    {\n                        clients.map(client => (<Client key={client.socketId} username={client.username}/>))\n                    }\n                </div>\n            </div>\n            <button className='btn copyBtn'>Copy room id</button>\n            <button className='btn leaveBtn'>leave</button>\n        </div>\n        <div className='editorWrap'>\n            <Editor socketRef={socketRef} roomId={roomId} onCodeChange={(code) => {\n                        codeRef.current = code;\n                    }}/>\n        </div>\n    </div>\n  )\n}\n\nexport default EditorPage"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}