{"ast":null,"code":"var _jsxFileName = \"/Users/paawankarwa/Desktop/projects/realtime-editor/src/pages/EditorPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport Client from '../components/Client.js';\nimport Editor from '../components/Editor.js';\nimport { initsocket } from '../socket.js';\nimport ACTIONS from '../Actions.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditorPage = () => {\n  _s();\n  const socketRef = useRef(null);\n  useEffect(() => {\n    const init = async () => {\n      socketRef.current = await initsocket();\n      socketRef.current.emit(ACTIONS.JOIN);\n    };\n    init();\n  }, []);\n  const [clients, setClients] = useState([{\n    socketId: 1,\n    username: \"Client 1\"\n  }, {\n    socketId: 2,\n    username: \"Client 2\"\n  }, {\n    socketId: 3,\n    username: \"Client 3\"\n  }, {\n    socketId: 4,\n    username: \"Client 4\"\n  }]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mainWrap\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"aside\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"asideInner\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"logo\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"logoImage\",\n            src: \"/code-sync.png\",\n            alt: \"logo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Connected Users\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"clientsList\",\n          children: clients.map(client => /*#__PURE__*/_jsxDEV(Client, {\n            username: client.username\n          }, client.socketId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 48\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn copyBtn\",\n        children: \"Copy room id\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn leaveBtn\",\n        children: \"leave\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"editorWrap\",\n      children: /*#__PURE__*/_jsxDEV(Editor, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(EditorPage, \"fzSUV3FsfAtdpcT3DDfcoljCOyo=\");\n_c = EditorPage;\nexport default EditorPage;\nvar _c;\n$RefreshReg$(_c, \"EditorPage\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Client","Editor","initsocket","ACTIONS","jsxDEV","_jsxDEV","EditorPage","_s","socketRef","init","current","emit","JOIN","clients","setClients","socketId","username","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","map","client","_c","$RefreshReg$"],"sources":["/Users/paawankarwa/Desktop/projects/realtime-editor/src/pages/EditorPage.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react'\nimport Client from '../components/Client.js'\nimport Editor from '../components/Editor.js';\nimport { initsocket } from '../socket.js';\nimport ACTIONS from '../Actions.js';\nconst EditorPage = () => {\n    const socketRef = useRef(null);\n    useEffect(()=> {\n        const init =  async ()=>{\n            socketRef.current = await initsocket();\n            socketRef.current.emit(ACTIONS.JOIN);\n        }\n        init();\n    },[]);\n    const [clients,setClients] = useState([\n        {socketId:1, username:\"Client 1\"},\n        {socketId:2, username:\"Client 2\"},\n        {socketId:3, username:\"Client 3\"},\n        {socketId:4, username:\"Client 4\"}\n    ]);\n    return (\n    <div className='mainWrap'>\n        <div className='aside'>\n            <div className='asideInner'>\n                <div className='logo'>\n                    <img className ='logoImage' src='/code-sync.png' alt='logo'></img>\n                </div>\n                <h3>\n                    Connected Users\n                </h3>\n                <div className='clientsList'>\n                    {\n                        clients.map(client => (<Client key={client.socketId} username={client.username}/>))\n                    }\n                </div>\n            </div>\n            <button className='btn copyBtn'>Copy room id</button>\n            <button className='btn leaveBtn'>leave</button>\n        </div>\n        <div className='editorWrap'>\n            <Editor />\n        </div>\n    </div>\n  )\n}\n\nexport default EditorPage"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}